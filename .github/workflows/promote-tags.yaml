name: Promote tags

on:
  workflow_dispatch:
    inputs:
      source_tag:
        description: Existing image tag to promote (e.g., v1.6.0)
        type: string
        required: true
      promote_latest:
        description: Promote tag as latest
        type: boolean
        default: false
      promote_stable:
        description: Promote tag as stable
        type: boolean
        default: false

jobs:
  promote:
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: beets
      DOCKERHUB_REPOSITORY: beets
    steps:
      - name: Validate selections
        id: prepare
        env:
          PROMOTE_LATEST: ${{ inputs.promote_latest }}
          PROMOTE_STABLE: ${{ inputs.promote_stable }}
        run: |
          set -euo pipefail

          tags=()
          if [ "${PROMOTE_LATEST}" = "true" ]; then
            tags+=("latest")
          fi
          if [ "${PROMOTE_STABLE}" = "true" ]; then
            tags+=("stable")
          fi

          if [ "${#tags[@]}" -eq 0 ]; then
            echo "Select at least one tag to promote (latest and/or stable)." >&2
            exit 1
          fi

          {
            printf 'tags<<EOF\n'
            for tag in "${tags[@]}"; do
              printf '%s\n' "$tag"
            done
            printf 'EOF\n'
          } >> "${GITHUB_OUTPUT}"

      - uses: docker/setup-buildx-action@v3

      - name: DockerHub login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: GitHub Container Registry login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Promote tags
        env:
          DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
          DOCKERHUB_REPOSITORY: ${{ env.DOCKERHUB_REPOSITORY }}
          PROJECT_NAME: ${{ env.PROJECT_NAME }}
          GH_OWNER: ${{ github.repository_owner }}
          SOURCE_TAG: ${{ inputs.source_tag }}
          TARGET_TAGS: ${{ steps.prepare.outputs.tags }}
        run: |
          set -euo pipefail

          owner_lower=$(printf '%s' "$GH_OWNER" | tr '[:upper:]' '[:lower:]')
          hub_source="${DOCKERHUB_USERNAME}/${DOCKERHUB_REPOSITORY}:${SOURCE_TAG}"
          ghcr_source="ghcr.io/${owner_lower}/${PROJECT_NAME}:${SOURCE_TAG}"

          mkdir -p tags
          printf '%s\n' "$TARGET_TAGS" > tags/list

          echo "Validating source manifest on DockerHub: ${hub_source}"
          docker buildx imagetools inspect "${hub_source}" > /dev/null

          echo "Validating source manifest on GHCR: ${ghcr_source}"
          docker buildx imagetools inspect "${ghcr_source}" > /dev/null

          while IFS= read -r tag; do
            [ -n "$tag" ] || continue

            echo "Promoting DockerHub tag: ${hub_source} -> ${tag}"
            docker buildx imagetools create \
              --tag "${DOCKERHUB_USERNAME}/${DOCKERHUB_REPOSITORY}:${tag}" \
              "${hub_source}"

            echo "Promoting GHCR tag: ${ghcr_source} -> ${tag}"
            docker buildx imagetools create \
              --tag "ghcr.io/${owner_lower}/${PROJECT_NAME}:${tag}" \
              "${ghcr_source}"
          done < tags/list
